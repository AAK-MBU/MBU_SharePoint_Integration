name: Publish Python 🐍 distribution 📦 to PyPI

on: workflow_dispatch

jobs:
    build:
        name: Build distribution 📦
        runs-on: ubuntu-latest

        steps:
        - uses: actions/checkout@v4
          with:
            persist-credentials: false
        - name: Set up Python
          uses: actions/setup-python@v5
          with:
            python-version: "3.x"
        - name: Install pypa/build
          run: >-
            python3 -m
            pip install
            build
            --user
        - name: Build a binary wheel and a source tarball
          run: python3 -m build
        - name: Store the distribution packages
          uses: actions/upload-artifact@v4
          with:
            name: python-package-distributions
            path: dist/

    publish-to-pypi:
        name: Publish Python 🐍 distribution 📦 to PyPI
        needs:
        - build
        runs-on: ubuntu-latest

        environment:
            name: release
            url: https://pypi.org/p/mbu_msoffice_integration/

        permissions:
            id-token: write 

        steps:
        - name: Download all the dists
          uses: actions/download-artifact@v4
          with:
            name: python-package-distributions
            path: dist/
        - name: Publish distribution 📦 to PyPI
          uses: pypa/gh-action-pypi-publish@release/v1

    tag-new-version:
        name: Tag new version
        needs:
        - publish-to-pypi
        runs-on: ubuntu-latest
        steps:
        
          - name: Checkout main branch
            uses: actions/checkout@v3
            with:
              ref: main
              fetch-depth: 2 # We need to fetch at least two commits for comparison
          - name: Extract version from pyproject.toml
            id: get_version
            run: |
              VERSION=$(cat pyproject.toml | grep '^version =' | awk -F'"' '{print $2}')
              echo "VERSION=$VERSION" >> "$GITHUB_ENV"
          - name: Tag release
            run: |
              git config --global user.name "github-actions"
              git config --global user.email "github-actions@github.com"
              git checkout main
              git tag "v${VERSION}"
              git push origin "v${VERSION}"
            env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}